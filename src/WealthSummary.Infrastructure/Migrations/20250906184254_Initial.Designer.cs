// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WealthSummary.Infrastructure.Data;

#nullable disable

namespace WealthSummary.Infrastructure.Migrations
{
    [DbContext(typeof(WealthDbContext))]
    [Migration("20250906184254_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("main")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WealthSummary.Domain.Model.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<int>("AssetType")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AssetId");

                    b.HasIndex("ClientId");

                    b.ToTable("Assets", "main");
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", "main");
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.FinancialStatus", b =>
                {
                    b.Property<int>("FinancialStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialStatusId"));

                    b.Property<decimal>("AnnualExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AnnualIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("RiskAppetite")
                        .HasColumnType("int");

                    b.HasKey("FinancialStatusId");

                    b.HasIndex("ClientId");

                    b.ToTable("FinancialStatuses", "main");
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.Liability", b =>
                {
                    b.Property<int>("LiabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LiabilityId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LiabilityType")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LiabilityId");

                    b.HasIndex("ClientId");

                    b.ToTable("Liabilities", "main");
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.MeetingNote", b =>
                {
                    b.Property<int>("MeetingNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingNoteId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("MeetingNoteId");

                    b.HasIndex("ClientId");

                    b.ToTable("MeetingNotes", "main");
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.Asset", b =>
                {
                    b.HasOne("WealthSummary.Domain.Model.Client", null)
                        .WithMany("Assets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.FinancialStatus", b =>
                {
                    b.HasOne("WealthSummary.Domain.Model.Client", null)
                        .WithMany("FinancialStatuses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.Liability", b =>
                {
                    b.HasOne("WealthSummary.Domain.Model.Client", null)
                        .WithMany("Liabilities")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.MeetingNote", b =>
                {
                    b.HasOne("WealthSummary.Domain.Model.Client", null)
                        .WithMany("MeetingNotes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WealthSummary.Domain.Model.Client", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("FinancialStatuses");

                    b.Navigation("Liabilities");

                    b.Navigation("MeetingNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
